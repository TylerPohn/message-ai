rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules
    match /{document=**} {
      allow read, write: if request.time < timestamp.date(2025, 11, 19);
    }

    // Contacts collection security rules
    match /contacts/{contactId} {
      allow read: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      allow delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }


    // Messages collection security rules
    match /messages/{messageId} {
      allow read: if request.auth != null &&
        request.auth.uid in resource.data.conversationId;
      allow create: if request.auth != null &&
        request.resource.data.senderId == request.auth.uid;
      allow update: if request.auth != null &&
        request.auth.uid in resource.data.conversationId;
        // This allows translation fields (detectedLanguage, isTranslating)
        // to be updated by any conversation participant

      // Translations subcollection - stores per-language translations
      match /translations/{targetLanguage} {
        allow read: if request.auth != null &&
          request.auth.uid in get(/databases/$(database)/documents/messages/$(messageId)).data.conversationId;
        allow write: if request.auth != null &&
          request.auth.uid in get(/databases/$(database)/documents/messages/$(messageId)).data.conversationId;
          // Any conversation participant can create/update translations
      }
    }

    // Memberships collection security rules
    match /memberships/{membershipId} {
      allow read: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      allow update: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }

    // Conversations collection security rules
    match /conversations/{conversationId} {
      allow read: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.participants;
      allow update: if request.auth != null && 
        request.auth.uid in resource.data.participants;
    }

    // Users collection security rules
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        request.resource.data.uid == request.auth.uid;
      allow update: if request.auth != null && 
        resource.data.uid == request.auth.uid;
    }
  }
}